from typing import Any

from aiogram import F
from aiogram.types import CallbackQuery
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import SwitchTo, Row, Button, ScrollingGroup, Column, Select
from aiogram_dialog.widgets.text import Const, Format

from telegram_bot.routers.ref_program.balance_dialog.balance_dataclass import BalanceMovement, BALANCE_KEY
from telegram_bot.routers.ref_program.balance_dialog.balance_dialog_states import BalanceDialog


async def close_dialog(callback: CallbackQuery,
                       button: Button,
                       dialog_manager: DialogManager):
    try:
        await dialog_manager.done()
    except Exception as e:
        print(e)
        pass


def balance_movement_id_getter(balance_movement: BalanceMovement) -> int:
    return balance_movement.id


async def on_balance_movement_selected(
        callback: CallbackQuery,
        widget: Any,
        dialog_manager: DialogManager,
        balance_movement_id: int,
):
    await callback.answer(
        text=str(balance_movement_id)
    )


async def user_balance_movement_getter(**_kwargs):
    dialog_manager = _kwargs['dialog_manager']

    dialog_manager.dialog_data['current_balance'] = 12346
    dialog_manager.dialog_data['all_replenishments'] = 100000
    dialog_manager.dialog_data['all_write_offs'] = 20000

    test_data = [
        {
            'id': 1,
            'amount': 100,
            'is_accrual': True
        },
        {
            'id': 2,
            'amount': 12,
            'is_accrual': False
        },
        {
            'id': 3,
            'amount': 220,
            'is_accrual': True
        },
        {
            'id': 4,
            'amount': 4000,
            'is_accrual': False
        },
        {
            'id': 5,
            'amount': 56,
            'is_accrual': True
        },
    ]

    return {
        BALANCE_KEY:
            [
                BalanceMovement(balance_movement['id'],
                                BalanceMovement.format_amount(balance_movement['amount'],
                                                              balance_movement['is_accrual']))
                for balance_movement in test_data
            ]
    }


# balance_menu = Window(
#     Const("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é CRM –±–æ—Ç–∞.\n\n"
#           "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: "),
#     SwitchTo(
#         text=Const("‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"), id="make_task",
#         # when=is_admin
#     ),
#     Row(
#         SwitchTo(
#             text=Const("üì• –ó–∞–¥–∞—á–∏ –¥–ª—è –º–µ–Ω—è"), id="my_tasks", state=DialogTaskMenu.my_tasks
#         ),
#         SwitchTo(
#             text=Const("‚úâÔ∏è –ó–∞–¥–∞—á–∏ –æ—Ç –º–µ–Ω—è"), id="my_orders", state=DialogTaskMenu.my_orders
#         )
#     ),
#     Button(
#         text=Const("üîö –í—ã–π—Ç–∏"), id="close_dialog", on_click=close_dialog
#     ),
#     state=state=BalanceDialog.balance_dialog_menu
# )

# –ë–∞–ª–∞–Ω—Å - –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 20 –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π/—Å–ø–∏—Å–∞–Ω–∏–π.
# –ò –Ω–∏–∂–µ —Ç—Ä–∏ –ø–æ–¥—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è:
# –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: –°—É–º–º–∞
# –í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ: –°—É–º–º–∞
# –ë–∞–ª–∞–Ω—Å: –°—É–º–º–∞

# dialog_manager.dialog_data['current_balance'] = 12346
# dialog_manager.dialog_data['all_replenishments'] = 100000
# dialog_manager.dialog_data['all_write_offs'] = 20000

balance_menu = Window(
    Const(
        "–£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –±–∞–ª–∞–Ω—Å—É.",
        when=~F['dialog_data']
    ),
    Format(
        "–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {dialog_data[current_balance]}"
        "\n–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {dialog_data[all_replenishments]}"
        "\n–í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ: {dialog_data[all_write_offs]}",
        when=F['dialog_data']
    ),
    ScrollingGroup(
        Column(
            Select(
                text=Format("{item.amount}"),
                id="task_select",
                items=BALANCE_KEY,
                item_id_getter=balance_movement_id_getter,
                on_click=on_balance_movement_selected,
            ),
        ),
        width=1,
        height=5,
        id="scroll_executors_menu",
        when=F['dialog_data']
    ),
    Button(
        text=Const("–í—ã–π—Ç–∏"), id="back_to_menu", on_click=None
    ),
    getter=user_balance_movement_getter,
    state=BalanceDialog.balance_dialog_menu
)

balance_dialog = Dialog(
    balance_menu
)
